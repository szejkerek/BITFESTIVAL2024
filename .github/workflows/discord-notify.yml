name: Version Tagging and Notify Discord

on:
  push:
    branches:
      - develop
      - main

jobs:
  tag-version:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.calculate_version.outputs.new_tag }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Get all tags using GitHub API
        id: get_tags
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                           "https://api.github.com/repos/${{ github.repository }}/tags")
          
          # Extract all tags and filter valid semantic version tags
          tags=$(echo "$response" | jq -r '.[].name')
          echo "Tags: $tags"
          
          # Filter tags to keep only valid semantic versioning tags
          valid_tags=$(echo "$tags" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          
          if [ -z "$valid_tags" ]; then
            valid_tags="0.0.0"
          fi
          
          echo "Latest valid tag: $valid_tags"
          echo "::set-output name=latest_tag::$valid_tags"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate the new version
        id: calculate_version
        run: |
          latest_tag="${{ steps.get_tags.outputs.latest_tag }}"
          branch="${{ github.ref_name }}"

          IFS='.' read -r major minor patch <<< "$latest_tag"

          if [ "$branch" = "develop" ]; then
            patch=$((patch + 1))
          elif [ "$branch" = "main" ]; then
            minor=$((minor + 1))
            patch=0
          fi

          new_tag="${major}.${minor}.${patch}"
          echo "New version tag: $new_tag"
          echo "::set-output name=new_tag::$new_tag"

      - name: Create and push the new tag
        run: |
          new_tag="${{ steps.calculate_version.outputs.new_tag }}"
          git tag "$new_tag"
          git push origin "$new_tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-discord:
    runs-on: ubuntu-latest
    needs: tag-version
    steps:
      - name: Get the merged branch name and notify Discord
        uses: actions/github-script@v6
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          NEW_TAG: ${{ needs.tag-version.outputs.new_tag }}
        with:
          script: |
            const commitMessage = context.payload.head_commit.message || '';
            const mergedBranchMatch = commitMessage.match(/Merge branch '(.+)' into (develop|main)/);
            const mergedBranch = mergedBranchMatch && mergedBranchMatch[1] ? mergedBranchMatch[1] : 'unknown';
            const newTag = process.env.NEW_TAG;
            const branch = '${{ github.ref_name }}';
            const message = `**New Version Released:** ${newTag}\n> Merged branch: *${mergedBranch}*\n> Target branch: *${branch}*\n‚ö†Ô∏è **Reminder**: Update your branches to avoid conflicts! üö®`;

            const response = await fetch(process.env.DISCORD_WEBHOOK_URL, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ content: message })
            });

            if (!response.ok) {
              throw new Error(`Failed to send message to Discord: ${response.statusText}`);
            }
